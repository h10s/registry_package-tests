name: "Log package published"
on:
  registry_package:

jobs:
  update-issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - run: cat $GITHUB_EVENT_PATH
      
      - uses: actions/github-script@v4
        with:
          script: |
            console.log(context.payload)

      - uses: actions/github-script@v4
        with:
          script: |
            console.log(context.payload.registry_package.name)

      - uses: actions/github-script@v4
        with:
          script: |
            title = context.payload.registry_package.name
            
            issues = await octokit.paginate(github.issues.listForRepo, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `${context.ref} (${context.sha}) being deployed`,
              body: `ref: ${context.ref}\nsha: ${context.sha}\nactor: ${context.actor}`,
              (response) => response.data.map(i => { issue.number, issue.title })
            })
            
            issue = issues.find(i => i.title === title)
            
            // create a new issue or comment on an existing issue
            if (issue === undefined) {
              await github.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: context.payload.registry_package.package_version.version,
              })
            } else {
              await github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: context.payload.registry_package.package_version.version,
              })
            }
