name: "Log package published"
on:
  registry_package:

jobs:
  update-issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - run: cat $GITHUB_EVENT_PATH
      
      - uses: actions/github-script@v4
        with:
          script: |
            title = context.payload.registry_package.name
            console.log(title)
            
            issues = await octokit.paginate(
                github.issues.listForRepo,
                { owner: context.repo.owner, repo: context.repo.repo },
                (response) => response.data.map((issue) => { return { issue.number, issue.title }})
            
            existingIssue = issues.find(i => i.title === title)
            
            // create a new issue or comment on an existing issue
            if (existingIssue === undefined) {
              console.log("creating new issue")
              await github.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: context.payload.registry_package.package_version.version,
              })
            } else {
              console.log("commenting on existing issue")
              await github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: context.payload.registry_package.package_version.version,
              })
            }
